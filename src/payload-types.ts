/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    country: Country;
    state: State;
    city: City;
    customers: Customer;
    users: User;
    pages: Page;
    media: Media;
    rootcategory: Rootcategory;
    parentcategory: Parentcategory;
    products: Product;
    plans: Plan;
    subscriptions: Subscription;
    companies: Company;
    enquiries: Enquiry;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "country".
 */
export interface Country {
  id: number;
  name: string;
  createdBy?: (number | null) | User;
  modifiedBy?: (number | null) | User;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  role: 'admin' | 'user';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "state".
 */
export interface State {
  id: number;
  name: string;
  countryId?: (number | null) | Country;
  createdBy?: (number | null) | User;
  modifiedBy?: (number | null) | User;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "city".
 */
export interface City {
  id: number;
  name: string;
  stateId: number | State;
  countryId?: (number | null) | Country;
  createdBy?: (number | null) | User;
  modifiedBy?: (number | null) | User;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  fullName: string;
  location?: string | null;
  contact?: string | null;
  role?: ('admin' | 'service_provider' | 'user') | null;
  isEmailVerified?: boolean | null;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  lexicalText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  slug?: string | null;
  lexicalText_html?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rootcategory".
 */
export interface Rootcategory {
  id: number;
  name: string;
  description: string;
  createdBy?: (number | null) | User;
  modifiedBy?: (number | null) | User;
  isDeleted?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "parentcategory".
 */
export interface Parentcategory {
  id: number;
  name: string;
  description: string;
  rootCategoryRef?: (number | null) | Rootcategory;
  createdBy?: (number | null) | User;
  modifiedBy?: (number | null) | User;
  isDeleted?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  name: string;
  productCode: string;
  description: string;
  productimage: number | Media;
  videourl?: string | null;
  specification?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  parentcategoryref?: (number | null) | Parentcategory;
  rootcategoryref?: (number | null) | Rootcategory;
  cityref?: (number | null) | City;
  createdBy?: (number | null) | User;
  modifiedBy?: (number | null) | User;
  isDeleted?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "plans".
 */
export interface Plan {
  id: number;
  name: string;
  description: string;
  createdBy?: (number | null) | User;
  modifiedBy?: (number | null) | User;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions".
 */
export interface Subscription {
  id: number;
  name: string;
  description: string;
  amount?: number | null;
  freeEntries?: number | null;
  plansref?: (number | null) | Plan;
  createdBy?: (number | null) | User;
  modifiedBy?: (number | null) | User;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "companies".
 */
export interface Company {
  id: number;
  name: string;
  logo: number | Media;
  mobile: string;
  email: string;
  isEmailVerified?: boolean | null;
  address: string;
  additionalinfo?:
    | {
        key?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  branches?:
    | {
        branchName: string;
        contactNo?: string | null;
        contactPersonName?: string | null;
        contactEmail?: string | null;
        location?: string | null;
        id?: string | null;
      }[]
    | null;
  stateId: number | State;
  countryId?: (number | null) | Country;
  mapUrl?: string | null;
  subscriptionRef?: (number | null) | Subscription;
  amount?: number | null;
  freeEntries?: number | null;
  whatsappno?: string | null;
  createdBy?: (number | null) | User;
  modifiedBy?: (number | null) | User;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "enquiries".
 */
export interface Enquiry {
  id: number;
  userRef?: (number | null) | User;
  enquiryMessgae: string;
  enquiryType: 'job' | 'test1';
  productRef?: (number | null) | Product;
  companyRef?: (number | null) | Company;
  enquiryStatus: string;
  modifiedBy?: (number | null) | User;
  isDeleted?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user:
    | {
        relationTo: 'customers';
        value: number | Customer;
      }
    | {
        relationTo: 'users';
        value: number | User;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}